package com.example.track_me;

import java.util.ArrayList;
import java.util.List;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import android.app.IntentService;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;

import com.example.track_me.others.JSONParser;
import com.google.android.gms.maps.model.LatLng;

public class UpdateLocationService extends IntentService implements LocationListener {
	Location myLoc;
	LocationManager locationManager;
	String provider;
	Criteria criteria;
	LatLng myLatLng;
	private static final String online_URL =SplashScreen.SERVER_IP+"project/test/friendLocationTest.php";
	JSONParser parser;

	public UpdateLocationService() {
		super("updateLocationService");
		
	}
	
	
	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
		int index = 0;
		String[] locationProvider = new String[] {
				LocationManager.GPS_PROVIDER, LocationManager.NETWORK_PROVIDER };
		do {
			provider = locationProvider[index];
			locationManager.requestLocationUpdates(provider, 2000, 10, this);

			Log.i("update provider location ", provider);
			myLoc = locationManager
					.getLastKnownLocation(provider);

			if (myLoc != null) {
				double myLat = myLoc.getLatitude();
				double myLon = myLoc.getLongitude();
				// myLoc = loc.getLocation();
				Log.i("updateLocation Location Current home activity location ", "" + myLat
						+ ", " + myLon);

				myLatLng = new LatLng(myLat, myLon);
				locationManager.removeUpdates(this);
				locationManager
						.requestLocationUpdates(provider, 3000, 10, this);
				sendMyLocation(myLatLng);
			}

			index++;
		} while (myLoc == null);
		return super.onStartCommand(intent, flags, startId);
	}
	
	@Override
	protected void onHandleIntent(Intent arg0) {
		/*int i =0;
		while(true){
			
			if(i == Integer.MAX_VALUE)
				break;
			Log.i("update service started", ""+i);
			i++;
			
			
		}*/
	}

	
	private void sendMyLocation(LatLng myLatLng){
	
		new UpdateMyLocation().execute();
	
		
	}
	@Override
	public void onLocationChanged(Location location) {
	
		Log.i("updateLocation onLocationChanged ", "" + location.getLatitude()
				+ ", " + location.getLongitude()+ " "+provider);
		myLatLng = new LatLng(location.getLatitude(), location.getLongitude());
		sendMyLocation(myLatLng);
	}

	@Override
	public void onProviderDisabled(String provider) {
		
		
	}

	@Override
	public void onProviderEnabled(String provider) {
		
		
	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {
	
		
	}
	
	class UpdateMyLocation extends AsyncTask<Void, Void, Void>{

		@Override
		protected Void doInBackground(Void... params) {
			SharedPreferences pref = getSharedPreferences("number",
					Context.MODE_PRIVATE);

			String number = pref.getString("phone", "default value");
			
			double lat = myLatLng.latitude;
			double lng = myLatLng.longitude;
			List<NameValuePair> param = new ArrayList<NameValuePair>();
			param.add(new BasicNameValuePair("number", number));
			param.add(new BasicNameValuePair("lat", lat+""));
			param.add(new BasicNameValuePair("lng", lng+""));
			
			parser = new JSONParser();
			parser.makeHttpRequest(online_URL, "POST", param);
			
			return null;
		}
		
	}

}//End service
