package com.example.track_me.service;

import java.util.ArrayList;
import java.util.List;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;

import android.app.IntentService;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.location.Criteria;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;

import com.example.track_me.SplashScreen;
import com.example.track_me.others.JSONParser;
import com.google.android.gms.maps.model.LatLng;

public class UpdateLocationService extends IntentService implements
		LocationListener {
	Location myLoc;
	LocationManager locationManager;
	String provider;
	Criteria criteria;
	LatLng myLatLng, tempLaLng;
	private static final String online_URL = SplashScreen.SERVER_IP
			+ "project/FriendLocation.php";
	JSONParser parser;
	String[] locationProvider;
	String phoneNumber;
	Boolean lastSeen = false;

	public UpdateLocationService() {
		super("updateLocationService");

	}

	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
		int index = 0;
		locationProvider = new String[] { LocationManager.GPS_PROVIDER,
				LocationManager.NETWORK_PROVIDER };

		SharedPreferences pref = getSharedPreferences("number",
				Context.MODE_PRIVATE);

		phoneNumber = pref.getString("phone", "default value");
		parser = new JSONParser();

		tempLaLng = new LatLng(0, 0);
		do {
			// provider = locationProvider[index];
			locationManager.requestLocationUpdates(getProvider(), 2000, 10,
					this);

			Log.i("update provider location ", provider);
			myLoc = locationManager.getLastKnownLocation(provider);

			if (myLoc != null) {
				double myLat = myLoc.getLatitude();
				double myLon = myLoc.getLongitude();
				// myLoc = loc.getLocation();
				Log.i("updateLocation Location Current home activity location ",
						"" + myLat + ", " + myLon);

				myLatLng = new LatLng(myLat, myLon);
				locationManager.removeUpdates(this);
				locationManager
						.requestLocationUpdates(provider, 1000, 40, this);
				sendMyLocation(myLatLng);
			}

			index++;
		} while (myLoc == null);

		return super.onStartCommand(intent, flags, startId);
	}

	@Override
	protected void onHandleIntent(Intent arg0) {

	}

	private void sendMyLocation(LatLng myLatLng) {

		Log.i("updateLocation  distance ",
				" " + getDistanceMoved(tempLaLng, myLatLng));
		if (getDistanceMoved(tempLaLng, myLatLng) > 10) {
			new UpdateMyLocation().execute();

			Log.e("updateLocation SendMyLocation ", " location updated");

		}
	}

	@Override
	public void onLocationChanged(Location location) {
		locationManager.requestLocationUpdates(getProvider(), 2000, 10, this);
		Log.i("updateLocation onLocationChanged ", "" + location.getLatitude()
				+ ", " + location.getLongitude() + " " + provider);
		myLatLng = new LatLng(location.getLatitude(), location.getLongitude());
		setLastSeen();
		sendMyLocation(myLatLng);
		tempLaLng = myLatLng;

	}

	@Override
	public void onProviderDisabled(String provider) {

	}

	@Override
	public void onProviderEnabled(String provider) {

	}

	@Override
	public void onStatusChanged(String provider, int status, Bundle extras) {

	}

	private String getProvider() {
		Location location = null;
		int i = 0;
		while (location == null) {
			if (i <= 1) {
				provider = locationProvider[i];
				location = locationManager.getLastKnownLocation(provider);
				i++;
			} else {
				i = 0;
			}

		}
		return provider;
	}

	class UpdateMyLocation extends AsyncTask<Void, Void, Void> {

		@Override
		protected Void doInBackground(Void... params) {

			double lat = myLatLng.latitude;
			double lng = myLatLng.longitude;
			List<NameValuePair> param = new ArrayList<NameValuePair>();
			param.add(new BasicNameValuePair("number", phoneNumber));
			param.add(new BasicNameValuePair("lat", lat + ""));
			param.add(new BasicNameValuePair("lng", lng + ""));

			parser.makeHttpRequest(online_URL, "POST", param);

			return null;
		}

	}// End asyncTask

	public double getDistanceMoved(LatLng start, LatLng end) {
		double lat1 = start.latitude;
		double lat2 = end.latitude;
		double lon1 = start.longitude;
		double lon2 = end.longitude;
		double dLat = Math.toRadians(lat2 - lat1);
		double dLon = Math.toRadians(lon2 - lon1);
		double a = Math.sin(dLat / 2) * Math.sin(dLat / 2)
				+ Math.cos(Math.toRadians(lat1))
				* Math.cos(Math.toRadians(lat2)) * Math.sin(dLon / 2)
				* Math.sin(dLon / 2);
		double c = 2 * Math.asin(Math.sqrt(a));
		return 6366000 * c;
	}//End getDistancemoved()

	private void setLastSeen() {
		new Thread(new Runnable() {

			@Override
			public void run() {
				try {
					Thread.sleep(10000);
					List<NameValuePair> params = new ArrayList<NameValuePair>();

					params.add(new BasicNameValuePair("number", phoneNumber));
					JSONObject resp = parser.makeHttpRequest(
							SplashScreen.SERVER_IP + "project/stayOnline.php",
							"POST", params);

					Log.w("updateLocation set Last seen", resp.toString());

				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

			}
		}).start();
	}//End setLastSeen()

}// End service
